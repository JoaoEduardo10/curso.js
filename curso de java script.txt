

javascript:
COMANDOS:
 window.alert('')
window.confirm('')
window.prompt()
document.write() <- escreve no documento
console.log()
new data() -> para saber as horas da maquina
variavel + gethours


--------------------------------------------------------------------------------------------------------------------------
TIPOS DE VARIAVEIS:
null -> seguinifica nada, nulo
typeof " TIPO DE: " -> var-> tambem pode ser usada a palavra LET(number : infinity,nan.),(string),(booleando -> true ou false)
(null),(undefined),(object: array ),(function)
+ -> serve para adição e conctenação
--------------------------------------------------------------------------------------------------------------------------
COMVERÇÃO:
para converte de string para number é: Number.parselnt(n) <- inteiro, Number.parsefloat(n) <- real, ou usar so Number(n).
para converte Number oara string é: string(N) ou n.string()

=========================================================================================================================
formata string:

().length <- diz quantas letras tem a string
toUpperCase() <- spara jogar a string para letras maiusculas
toLowerCase() <- para deixar minuscula
---------------------------------------------------------------------------------------------------------------------------
formata metodos: 

- tofixed(numero de casas decimais)
- replace ("o que voçe quer trocar" , "o que voçe vai trocar")
- n1.toLocaleString('pt-br',{style: 'currency',currency: 'brl}) <- para comverter em moeda local
- includes("digite o que voce que ver se tem ou não") verifica se tem a deterinada palavra ou determinado numero
- split('adiciona espaços e tira a letra ou palavra que voçe b=adicionar a que')
 transfoma cada parte de um texto em uma array
- join("para adiionar alguma coisa entre os espaços") ADICIONA ALGO  ENTRE OS ESPAÇOS
- arrey.from('variavel que vai transforma em cadeia de cacteres") TRANFORMA O CONREUDO DA VARIAVEL
 COMUN EM CADEIA DE CACTERES ARREY
- push(7) para adicio um valor no final da variavel
- unshift() adiciona o valor no começo da variavel
- pop() remove o item do final da arrey
- shift() remove o do comeco
- slice("bota da onde que comecar a remover"" onde quer para de remover") remove elemento de arreys
- splice('onde que comecar a tira''coneca a tirar') remove um ou mais itens na arrey
- length numero total de alguma variavel
- sort() arruma a ordem de apresentaçao de uma arrey do menor ao maior
- indexOf() <- para buscar valores 
- startsWith('Bom'); compara a primeira palavra e diz se é true ou false.
- endsWith('Bom');compara a ultima palavra e diz se e true ou false
- trim(); tira os espaços exedentes.
- primeira arrey.concat(segunda arrey "a que vai a arre que voçe quer juntar") -> serve para ta as arrey
--------------------------------------------------------------------------------------------------------------------------
OBJTOS:
{} -> para abre um objeto
this.alguma coisa -e usado para quando tiver uma função objeto


-------------------------------------------------------------------------------------------------------------------------
OPERADORES:

Aritiméticos:
+ <- adição
- <- sulbitração
* <- multiplicação
/ <- divição
% <- resto da divição inteira
** <- ao quadrado

ordem de precendencia dos operadores Aritimeticos:
()
**
*/%
+- 
os rekacionais nao tem ordem de precendencia
!
&&
||

Atribuição:



atribuições simples:
var a = 5 + 3 -> 8
var b = a % 5 -> 3
var c = 5 * b ** 2 -> 45
var d = 10 * a / 2 -> 6
var e =  6 * 2 / d -> 2
var f = b % e + 4 / -> 3

auto atribuição:

var n = 3

n = n + 4 = 7 /ou/ n += 4 -> 7 se ele receber ele mesmo

incremento:

/se for por 1 fica n++ ou n-- por ai vai/
 
Relacionais:
5	>	2 -> true
7	<	4 -> false
8	>=	8 -> true
9	<=	7 -> false
5	==	5 -> true / caso um seja uma string recebe === ex: 5 === "5" -> false.
4	!=	4 -> false / operador de não igual

Lógicos:

! -> negação /corresponde ao (o que nao e true e false)
&& -> conjução /correspode ao (e)
|| -> disjunção /corresponde ao (ou)

Ternário: (?, :)

 teste'?'true':'false

ex;

var média = 5,5

media > 7?'aprovado : 'reprovado
média igual a reprovado

obs: ":" <- correspobde ao (senao)

--------------------------------------------------------------------------------------------------------------------------
DOM do javascript
DOM -> Document Object Model

Selecimamdo;

- por Marca -> getElementsByTagName()
- por ID -> getElementBayID() e repreemtado por (#)
- por nome -> getElemenByName()
- por classe ->getElementByClassName() e representado por um (.)
- por seletor -> querySelector(),queySelectorAll()
- para escrever -e -> innerText ou innerHtml
- tem tabem o TextContent.
- setAttribute(); serve para cria e pegar o atributo ex ID CLass
- removeAttribute(); serve para remover atributos 
- classList; Serve para adiciona classe de estilos no css tendo as subtegs .add("vem nome da class)
.remove() Serve para remover, .toggle() se a class existir ele remove se nao ele adiciona
- parentNode / parentNode; para saber quem é o parecnte de cima
- childNodes / childNodes o melhor; serve para ver quaç e as tegs filhos
- firstChild / firstElementChild; pega a primeira teg filho
- lastElementChild / lastChild; para pegar a ultma teg filho.
- nextSibling / nextElementSibling / previousElementSibling; pega a ultima tegs teg irmao
- createElement; para criar um elemeto html (teg)
- prepend(); para adicionar elementos (tegs) depois
- append(); para adiciona elementos(tegs) depois.
- insertBefore(div, script) para adicionar em um elemento em um determinado lugar, vc primeiro bota o que que adicionar
depois bota abaixo de quem quer adixionar o elemento



---------------------------------------------------------------------------------------------------------------------------
EVENTOS :


- addEventListener -> para inicia a o evento
- onclick; um click
- ondblclick; dois cliks
- ondrag -> quando arrastar¨
- onkeydown -> toda vez que tocar no teclado 
- onkeyup -> toda vez que eu aperta e  souta o eventoo roda se eu segura o evento não roda
- mouseenter -> para entra 1 vez por entrada
- mouseout -> sair
- mousemove -> ele fica executando mesmo depois de esta dentro ate sai(toda vexz que mecher o mouse lel execulta o evento)
-



--------------------------------------------------------------------------------------------------------------------------
CONDIÇÕES:

if(condiçao){
	TRUE
}else{
	FALSE
}

CONDIÇÕES MULTIPLAS:
estrutura (escolha)
 switch(expressão){

	CASE 1:

	break

	CASE 2:

	break

	defaut:

}


ESTRUTURAS DE REPETIÇÕES:
estrutura enquanto con texte logico no inicio
while(condição){
   /       /
}
estrutura enquanto con texte logico no final 
do{
 /    /

}while(condição){

}


estrutura de repetição com variavel de cintrole:
 estrura(para)
for(inicio; teste; incr){

}



} while (condição)



VARIAVEIS COMPOSTAS:

var a = [ 5 , 8  , 4]

--------------------------------------------------------------------------------------------------------------------------
CAPTAR MENSAGEM DE ERRO;

- throw -> para achar um erro geralmente usado assim thorw new Erro("mensagem do erro")
- O try/catch serve para capitura erros depois de colocar o tharow sendo o try para tenta execultar e o 
catch para capturar o erro 
try {

}catch(e) {

}

----------------------------------------------------------------------------------------------------------------------------
PARA CLONAR UM OBJETO;
1- voçe pode usar o Object.assign({}, a que vai o nome do objeto)
2- {...mais o nome do objeto}
para mostra objs;
- .find para que mostre o arrey que dentro dele tem um objeto

---------------------------------------------------------------------------------------------------------------------------
 Math;

descição: Math é um objeto embutido que tem propriedades e 
métodos para constantes e funções matemáticas. Não é um objeto de função.

- Math.random() -> ele pega um numero aleatorio entre 0 e 1.
- Math.round(x) -> retorna o valor arrendondado de X.
- Math.sign(x) -> retorna o sinal de X e diz se e positivo ou negativo
(se for negatico retorna -1, caso seja positivo retorna 1).
- Math.max(9,8,6,0) -> ele diz qual é o maior numero.
- Math.min(9,8,6,0) -> ele diz qual é o menor numero.
- Math.pow(x,y) -> eleva o X no tanto de vezes Y




